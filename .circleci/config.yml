version: 2.1

# -----------------
# References for ease of use in below jobs
references:
  workspace_root: &workspace_root
                    ~/repo
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root
  persist_workspace: &persist_workspace
    persist_to_workspace:
      root: /home/circleci
      paths:
        - repo/build
        - repo/*/build
  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}-
        - v1-repo-
  gradle_cache_key: &gradle_cache_key
                      v1-dependency-gradle-{{ checksum "build.gradle" }}
  gradle_backup_cache_key: &gradle_backup_cache_key
                             v1-dependency-gradle-
  restore_gradle_modules: &restore_gradle_modules
    restore_cache:
      keys:
        - *gradle_cache_key
        - *gradle_backup_cache_key
  npm_cache_key: &npm_cache_key
                   v1-dependency-npm-{{ checksum "frontend/package.json" }}
  npm_backup_cache_key: &npm_backup_cache_key
                          v1-dependency-npm-
  restore_npm_modules: &restore_npm_modules
    restore_cache:
      keys:
        - *npm_cache_key
        - *npm_backup_cache_key

# -----------------

# -----------------
# Executors for job processing...
executors:
  openjdk:
    docker:
      - image: circleci/openjdk:11.0.2-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
  openjdk_node:
    docker:
      - image: circleci/openjdk:11.0.2-jdk-node-browsers
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

# -----------------

# -----------------
# Project jobs
jobs:
  checkout_code:
    executor: openjdk
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  build_deps:
    executor: openjdk
    steps:
      - *restore_repo
      - *restore_gradle_modules
      - *restore_npm_modules
      - run: chmod +x gradlew
      - run: ./gradlew downloadDependencies
      # TODO: here will be npm download dependencies task
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
      - save_cache:
          paths:
            - ~/repo/.gradle
          key: *gradle_cache_key
      # TODO: save node modules in cache here

  build:
    executor: openjdk_node
    steps:
      - *restore_repo
      - *restore_gradle_modules
      - *restore_npm_modules
      - run: chmod +x gradlew
      - run:
          name: Building backend services...
          command: ./gradlew assemble
      - save_cache:
          paths:
            - ~/repo/.gradle
          key: *gradle_cache_key
      - save_cache:
          paths:
            - ~/repo/frontend/node_modules
          key: * npm_cache_key
      - store_artifacts:
          path: ~/repo/*/build
          destination: build
      - *persist_workspace

  build_deploy_docker:
    machine: true
    steps:
      - *attach_workspace
      - *restore_repo
      - run: docker login -u $DOCKERHUB_LOGIN -p $DOCKERHUB_PASS
      - run:
          name: Building & pushing docker image for- config
          command: |
            docker build -t bandits/bandit-config ./config
            docker push bandits/bandit-config:latest
      - run:
          name: Building & pushing docker image for- registry
          command: |
            docker build -t bandits/bandit-registry ./registry
            docker push bandits/bandit-registry:latest
      - run:
          name: Building & pushing docker image for- ui-service
          command: |
            docker build -t bandits/bandit-ui-service ./ui-service
            docker push bandits/bandit-registry:latest

  test_backend_ut:
    executor: openjdk_node
    steps:
      - *attach_workspace
      - *restore_repo
      - *restore_gradle_modules
      - run: chmod +x gradlew
      - run:
          name: Backend Unit Tests
          command: ./gradlew check jacocoTestReport
      - *persist_workspace

  test_frontend_e2e:
    executor: openjdk_node # TODO: node chrome executor for e2e
    steps:
      - *attach_workspace
      - *restore_repo
      - *restore_gradle_modules
      - *restore_npm_modules
      #      - run: TODO: frontend e2e tests
      #          name: e2e
      #          command: ./gradlew e2etest
      #- *persist_workspace

  test_frontend_ut:
    executor: openjdk_node
    steps:
      - *attach_workspace
      - *restore_repo
      - *restore_gradle_modules
      - *restore_npm_modules
      - run: chmod +x gradlew
      - run:
          name: Frontend Unit Tests
          command: ./gradlew testCI
      - *persist_workspace

  stats:
    executor: openjdk
    steps:
      - *attach_workspace
      - *restore_repo
      - run:
          name: Codecov report
          command: bash <(curl -s https://codecov.io/bash)

  deploy_gke:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "bandits-cloud"
      - GOOGLE_PROJECT_ID: "bandits"
      - GOOGLE_COMPUTE_ZONE: "us-west1"
      - GOOGLE_CLUSTER_NAME: "bandits-cluster-1"
    steps:
      - *attach_workspace
      - *restore_repo
      - run:
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > /home/circleci/repo/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=/home/circleci/repo/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - run:
          name: Deploy to Kubernetes
          command: |
            envsubst < /home/circleci/repo/k8s.yaml > /home/circleci/repo/patched_k8s.yaml
            kubectl apply -f /home/circleci/repo/patched_k8s.yaml
            kubectl rollout status deployment/config
            kubectl rollout status deployment/registry
            kubectl rollout status deployment/ui-service

# -----------------

# -----------------
# Workflows
workflows:
  build_test_deploy:
    jobs:
      - checkout_code
      - build_deps:
          requires:
            - checkout_code
      - build:
          requires:
            - build_deps
      - test_backend_ut:
          requires:
            - build
      - test_frontend_e2e:
          requires:
            - build
      - test_frontend_ut:
          requires:
            - build
      - build_deploy_docker:
          requires:
            - test_backend_ut
            - test_frontend_e2e
            - test_frontend_ut
      - stats:
          requires:
            - test_backend_ut
            - test_frontend_e2e
            - test_frontend_ut
      - deploy_gke:
          requires:
            - test_backend_ut
            - test_frontend_e2e
            - test_frontend_ut
          filters:
            branches:
              only: master
