version: 2.1

# -----------------
# References for ease of use in below jobs
references:
  workspace_root: &workspace_root
                    ~/repo
  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root
  persist_workspace: &persist_workspace
    persist_to_workspace:
      root: *workspace_root
      paths:
        - build
        - /*/build
  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo
  gradle_cache_key: &gradle_cache_key
                   v1-dependency-gradle-{{ checksum "build.gradle" }}
  gradle_backup_cache_key: &gradle_backup_cache_key
                          v1-dependency-gradle
  restore_gradle_modules: &restore_gradle_modules
    restore_cache:
      keys:
        - *gradle_cache_key
        - *gradle_backup_cache_key
  npm_cache_key: &npm_cache_key
                      v1-dependency-npm-{{ checksum "frontend/package.json" }}   #TODO: correct when anguler will be included
  npm_backup_cache_key: &npm_backup_cache_key
                             v1-dependency-npm
  restore_npm_modules: &restore_npm_modules
    restore_cache:
      keys:
        - *npm_cache_key
        - *npm_backup_cache_key

# -----------------

# -----------------
# Executors for job processing...
executors:
  openjdk:
    docker:
      - image: circleci/openjdk:11.0.2-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
# -----------------

# -----------------
# Project jobs
jobs:
  checkout_code:
    executor: openjdk
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .

  build_deps:
    executor: openjdk
    steps:
      - *restore_repo
      - *restore_gradle_modules
      - *restore_npm_modules
      - run: gradlew downloadDependencies
      # TODO: here will be npm download dependencies task
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
      - save_cache:
          paths:
            - /root/app/.gradle
          key: *gradle_cache_key
      # TODO: save node modules in cache here

  build:
    executor: openjdk
    steps:
      - *restore_repo
      - *restore_gradle_modules
      - *restore_npm_modules
      - run: chmod +x gradlew
      - run:
          name: Building backend services...
          command: ./gradlew assemble
      - save_cache:
          paths:
              - /root/app/.gradle
          key: *gradle_cache_key
      - store_artifacts:
          path: /root/app/*/build
          destination: build

  test_backend_ut:
    executor: openjdk
    steps:
      - *restore_repo
      - *restore_gradle_modules
      - run: chmod +x gradlew
      - run:
          name: Unit Tests
          command: ./gradlew check jacocoTestReport
      - *persist_workspace

  test_frontend_e2e:
    executor: openjdk # TODO: node chrome executor for e2e
    steps:
      - *restore_repo
      - *restore_gradle_modules
      - *restore_npm_modules
#      - run: TODO: frontend e2e tests
#          name: e2e
#          command: ./gradlew e2etest

  test_frontend_ut:
    executor: openjdk
    steps:
      - *restore_repo
      - *restore_gradle_modules
      - *restore_npm_modules
  #      - run: TODO: frontend ut tests
  #          name: e2e
  #          command: ./gradlew ut

  stats:
    executor: openjdk
    steps:
      - *attach_workspace
      - *restore_repo
      - run:
          name: Codecov report
          command: bash <(curl -s https://codecov.io/bash

  deploy_gke:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "bandits-cloud"
      - GOOGLE_PROJECT_ID: "bandits"
      - GOOGLE_COMPUTE_ZONE: "us-west1"
      - GOOGLE_CLUSTER_NAME: "bandits-cluster-1"
    steps:
      - *attach_workspace
      - *restore_repo
      - run:
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker
      - run:
          name: Deploy to Kubernetes
          command: |
            envsubst < ${HOME}/repo/k8s.yml > ${HOME}/repo/patched_k8s.yml
            kubectl apply -f ${HOME}/repo/patched_k8s.yml
            kubectl rollout status deployment/config
            kubectl rollout status deployment/registry
            kubectl rollout status deployment/ui-service

# -----------------

# -----------------
# Workflows
workflows:
  build_test_deploy:
    jobs:
      - checkout_code
      - build_deps:
          requires:
            - checkout_code
      - build:
          requires:
            - build_deps
      - test_backend_ut:
          requires:
            - build
      - test_frontend_e2e:
          requires:
            - build
      - test_frontend_ut:
          requires:
            - build
      - stats:
          requires:
            - test_backend_ut
            - test_frontend_e2e
            - test_frontend_ut
      - deploy_gke:
          requires:
            - test_backend_ut
            - test_frontend_e2e
            - test_frontend_ut
          #filters:
            #branches:
            #  only: develop # TODO: change to master after GKE will be ok