version: 2.1
jobs:
  build:
    docker:
      - image: circleci/openjdk:11.0.2-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - run:
          name: Build app
          command: ./gradlew assemble
      - restore_cache:
          keys:
              - gradle-{{ checksum "build.gradle" }}
      - save_cache:
          paths:
              - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}

  test_ut:
    docker:
      - image: circleci/openjdk:11.0.2-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}
      - run:
          name: Unit Tests
          command: ./gradlew build -x test
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}-ut

  test_e2e:
    docker:
      - image: circleci/openjdk:11.0.2-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}
#      - run:
#          name: e2e
#          command: ./gradlew e2etest

  stats:
    docker:
      - image: circleci/openjdk:11.0.2-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}-ut
      - run:
          name: Codecov report
          command: bash <(curl -s https://codecov.io/bash)

  deploy:
    docker:
      - image: circleci/openjdk:11.0.2-jdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout

workflows:
  version: 2
  branch_pipeline:
    jobs:
      - build
      - test_ut:
          requires:
            - build
      - test_e2e:
          requires:
            - build
      - stats:
          requires:
            - test_ut
            - test_e2e
      - deploy:
          requires:
            - test_ut
            - test_e2e